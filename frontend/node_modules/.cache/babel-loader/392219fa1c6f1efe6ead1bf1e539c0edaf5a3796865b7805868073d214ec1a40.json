{"ast":null,"code":"import api from './api';\nimport API_CONFIG from '../config/api';\nclass AuthService {\n  // Register new user\n  async register(userData) {\n    try {\n      const response = await api.post(API_CONFIG.ENDPOINTS.AUTH.REGISTER, userData);\n      if (response.data.success) {\n        // Store token and user data\n        localStorage.setItem('authToken', response.data.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data.data.user));\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n        message: 'Registration failed'\n      };\n    }\n  }\n\n  // Login user\n  async login(credentials) {\n    try {\n      const response = await api.post(API_CONFIG.ENDPOINTS.AUTH.LOGIN, credentials);\n      if (response.data.success) {\n        // Store token and user data\n        localStorage.setItem('authToken', response.data.data.token);\n        localStorage.setItem('user', JSON.stringify(response.data.data.user));\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n        message: 'Login failed'\n      };\n    }\n  }\n\n  // Get user profile\n  async getProfile() {\n    try {\n      const response = await api.get(API_CONFIG.ENDPOINTS.AUTH.PROFILE);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n        message: 'Failed to fetch profile'\n      };\n    }\n  }\n\n  // Logout user\n  logout() {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n\n  // Check if user is authenticated\n  isAuthenticated() {\n    return !!localStorage.getItem('authToken');\n  }\n\n  // Get current user\n  getCurrentUser() {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  }\n\n  // Get auth token\n  getToken() {\n    return localStorage.getItem('authToken');\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["api","API_CONFIG","AuthService","register","userData","response","post","ENDPOINTS","AUTH","REGISTER","data","success","localStorage","setItem","token","JSON","stringify","user","error","_error$response","message","login","credentials","LOGIN","_error$response2","getProfile","get","PROFILE","_error$response3","logout","removeItem","window","location","href","isAuthenticated","getItem","getCurrentUser","parse","getToken"],"sources":["C:/Users/Yash Patil/OneDrive/Desktop/Proauthenticate/frontend/src/services/authService.js"],"sourcesContent":["import api from './api';\r\nimport API_CONFIG from '../config/api';\r\n\r\nclass AuthService {\r\n  // Register new user\r\n  async register(userData) {\r\n    try {\r\n      const response = await api.post(API_CONFIG.ENDPOINTS.AUTH.REGISTER, userData);\r\n      \r\n      if (response.data.success) {\r\n        // Store token and user data\r\n        localStorage.setItem('authToken', response.data.data.token);\r\n        localStorage.setItem('user', JSON.stringify(response.data.data.user));\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Registration failed' };\r\n    }\r\n  }\r\n\r\n  // Login user\r\n  async login(credentials) {\r\n    try {\r\n      const response = await api.post(API_CONFIG.ENDPOINTS.AUTH.LOGIN, credentials);\r\n      \r\n      if (response.data.success) {\r\n        // Store token and user data\r\n        localStorage.setItem('authToken', response.data.data.token);\r\n        localStorage.setItem('user', JSON.stringify(response.data.data.user));\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Login failed' };\r\n    }\r\n  }\r\n\r\n  // Get user profile\r\n  async getProfile() {\r\n    try {\r\n      const response = await api.get(API_CONFIG.ENDPOINTS.AUTH.PROFILE);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch profile' };\r\n    }\r\n  }\r\n\r\n  // Logout user\r\n  logout() {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('user');\r\n    window.location.href = '/login';\r\n  }\r\n\r\n  // Check if user is authenticated\r\n  isAuthenticated() {\r\n    return !!localStorage.getItem('authToken');\r\n  }\r\n\r\n  // Get current user\r\n  getCurrentUser() {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  }\r\n\r\n  // Get auth token\r\n  getToken() {\r\n    return localStorage.getItem('authToken');\r\n  }\r\n}\r\n\r\nexport default new AuthService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}