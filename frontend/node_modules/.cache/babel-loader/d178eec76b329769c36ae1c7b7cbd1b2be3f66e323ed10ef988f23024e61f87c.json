{"ast":null,"code":"import axios from 'axios';\nimport API_CONFIG from '../config/api';\nconst api = axios.create({\n  baseURL: API_CONFIG.BASE_URL,\n  timeout: API_CONFIG.TIMEOUT,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Enhanced request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Add request timestamp\n  config.metadata = {\n    startTime: new Date()\n  };\n  return config;\n}, error => {\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Enhanced response interceptor\napi.interceptors.response.use(response => {\n  // Calculate request duration\n  const endTime = new Date();\n  const startTime = response.config.metadata.startTime;\n  response.duration = endTime - startTime;\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response3;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n\n    // Only redirect if not already on login page\n    if (!window.location.pathname.includes('/login')) {\n      window.location.href = '/login';\n    }\n  }\n\n  // Handle other common errors\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 500) {\n    console.error('Server error - please try again later');\n  }\n  if (error.code === 'ECONNABORTED') {\n    console.error('Request timeout - please check your connection');\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_CONFIG","api","create","baseURL","BASE_URL","timeout","TIMEOUT","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","metadata","startTime","Date","error","console","Promise","reject","response","endTime","duration","_error$response","_error$response2","_error$response3","data","message","status","removeItem","window","location","pathname","includes","href","code"],"sources":["C:/Users/Yash Patil/OneDrive/Desktop/Proauthenticate/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport API_CONFIG from '../config/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_CONFIG.BASE_URL,\r\n  timeout: API_CONFIG.TIMEOUT,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Enhanced request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    // Add request timestamp\r\n    config.metadata = { startTime: new Date() };\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Enhanced response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    // Calculate request duration\r\n    const endTime = new Date();\r\n    const startTime = response.config.metadata.startTime;\r\n    response.duration = endTime - startTime;\r\n    \r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error.response?.data || error.message);\r\n    \r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('user');\r\n      \r\n      // Only redirect if not already on login page\r\n      if (!window.location.pathname.includes('/login')) {\r\n        window.location.href = '/login';\r\n      }\r\n    }\r\n    \r\n    // Handle other common errors\r\n    if (error.response?.status === 500) {\r\n      console.error('Server error - please try again later');\r\n    }\r\n    \r\n    if (error.code === 'ECONNABORTED') {\r\n      console.error('Request timeout - please check your connection');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,eAAe;AAEtC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,UAAU,CAACI,QAAQ;EAC5BC,OAAO,EAAEL,UAAU,CAACM,OAAO;EAC3BC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;;EAEA;EACAD,MAAM,CAACK,QAAQ,GAAG;IAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC;EAAE,CAAC;EAE3C,OAAOP,MAAM;AACf,CAAC,EACAQ,KAAK,IAAK;EACTC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAlB,GAAG,CAACO,YAAY,CAACe,QAAQ,CAACb,GAAG,CAC1Ba,QAAQ,IAAK;EACZ;EACA,MAAMC,OAAO,GAAG,IAAIN,IAAI,CAAC,CAAC;EAC1B,MAAMD,SAAS,GAAGM,QAAQ,CAACZ,MAAM,CAACK,QAAQ,CAACC,SAAS;EACpDM,QAAQ,CAACE,QAAQ,GAAGD,OAAO,GAAGP,SAAS;EAEvC,OAAOM,QAAQ;AACjB,CAAC,EACAJ,KAAK,IAAK;EAAA,IAAAO,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACTR,OAAO,CAACD,KAAK,CAAC,YAAY,EAAE,EAAAO,eAAA,GAAAP,KAAK,CAACI,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBG,IAAI,KAAIV,KAAK,CAACW,OAAO,CAAC;EAElE,IAAI,EAAAH,gBAAA,GAAAR,KAAK,CAACI,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBI,MAAM,MAAK,GAAG,EAAE;IAClC;IACAlB,YAAY,CAACmB,UAAU,CAAC,WAAW,CAAC;IACpCnB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC;;IAE/B;IACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAChDH,MAAM,CAACC,QAAQ,CAACG,IAAI,GAAG,QAAQ;IACjC;EACF;;EAEA;EACA,IAAI,EAAAT,gBAAA,GAAAT,KAAK,CAACI,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBG,MAAM,MAAK,GAAG,EAAE;IAClCX,OAAO,CAACD,KAAK,CAAC,uCAAuC,CAAC;EACxD;EAEA,IAAIA,KAAK,CAACmB,IAAI,KAAK,cAAc,EAAE;IACjClB,OAAO,CAACD,KAAK,CAAC,gDAAgD,CAAC;EACjE;EAEA,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}